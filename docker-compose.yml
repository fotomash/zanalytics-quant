x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

x-common-labels: &default-labels
  logging: "promtail"
  logging_jobname: "containerlogs"
  stackname: "docker-monitoring-stack-gpnc"

services:
  traefik:
    image: traefik:3.0
    container_name: traefik
    ports:
      - 80:80
      - 443:443
    restart: always
    labels:
      <<: *default-labels
      traefik.enable: true
      traefik.docker.network: traefik-public
      traefik.http.services.traefik-dashboard.loadbalancer.server.port: 8080
      traefik.http.routers.traefik-dashboard-http.entrypoints: http
      traefik.http.routers.traefik-dashboard-http.rule: Host(`${TRAEFIK_DOMAIN:-traefik.localhost}`)
      traefik.http.routers.traefik-dashboard-https.entrypoints: https
      traefik.http.routers.traefik-dashboard-https.rule: Host(`${TRAEFIK_DOMAIN:-traefik.localhost}`)
      traefik.http.routers.traefik-dashboard-https.tls: true
      traefik.http.routers.traefik-dashboard-https.tls.certresolver: le
      traefik.http.routers.traefik-dashboard-https.service: api@internal
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: https
      traefik.http.middlewares.https-redirect.redirectscheme.permanent: true
      traefik.http.routers.traefik-dashboard-http.middlewares: https-redirect
      traefik.http.middlewares.admin-auth.basicauth.users: ${TRAEFIK_USERNAME:-admin}:${TRAEFIK_HASHED_PASSWORD:-$$2y$$10$$example}
      traefik.http.routers.traefik-dashboard-https.middlewares: admin-auth
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-public-certificates:/certificates
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entrypoints.http.address=:80
      - --entrypoints.https.address=:443
      - --certificatesresolvers.le.acme.email=${ACME_EMAIL:-admin@localhost}
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --accesslog
      - --log
      - --api
    networks:
      - traefik-public
    logging: *default-logging

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-zanalytics}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    environment:
      - PYTHONPATH=/app:/app/components:/app/utils
      - PULSE_API_URL=http://django:8000
      - MT5_API_URL=http://mt5:5001
      - MT5_API_BASE=http://mt5:5001
      - PULSE_API_BASE=http://django:8000
      - REDIS_HOST=redis
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

  django:
    build:
      context: .
      dockerfile: backend/django/Dockerfile
    container_name: django
    working_dir: /app/backend/django
    volumes:
      - static_volume:/app/staticfiles
      - ./data/cold:/app/data/cold
      - ./agents:/app/agents
    restart: unless-stopped
    ports:
      - 8010:8000
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app:/app/components:/app/utils:/app/backend:/app/agents
      - DJANGO_SETTINGS_MODULE=app.settings
      - DJANGO_DOMAIN=${DJANGO_DOMAIN:-django.localhost}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID:-}
      - ALERTS_ENABLED=true
      - ALERTS_MIN_INTERVAL_SECONDS=60
      - ALERTS_SCORE_HI=90
      - ALERTS_TOXICITY_LIMIT=0.30
      - ALERTS_DD_INTRADAY_WARN=0.025
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-dev-secret-key-change-in-production}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - default
      - traefik-public
    labels:
      <<: *default-labels
      traefik.enable: true
      traefik.docker.network: traefik-public
      traefik.http.routers.django-http.rule: Host(`${DJANGO_DOMAIN:-django.localhost}`)
      traefik.http.routers.django-http.entrypoints: http
      traefik.http.routers.django-http.middlewares: https-redirect
      traefik.http.routers.django-http.service: django-service
      traefik.http.routers.django-https.rule: Host(`${DJANGO_DOMAIN:-django.localhost}`)
      traefik.http.routers.django-https.entrypoints: https
      traefik.http.routers.django-https.tls: true
      traefik.http.routers.django-https.tls.certresolver: le
      traefik.http.routers.django-https.service: django-service
      traefik.http.services.django-service.loadbalancer.server.port: 8000
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:8000/api/pulse/health').getcode()==200 else sys.exit(1)\""]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging: *default-logging

  pulse-kernel:
    build: .
    container_name: pulse_kernel
    command: python -m uvicorn api.pulse_api:app --host 0.0.0.0 --port 8080
    environment:
      - PULSE_CONFIG=/app/pulse_config.yaml
      - PULSE_JOURNAL_PATH=/app/data/journal
      - PYTHONPATH=/app:/app/pulse_kernel
      - REDIS_HOST=redis
      - POSTGRES_HOST=postgres
      - DJANGO_API_URL=http://django:8000
    volumes:
      - ./pulse_kernel.py:/app/pulse_kernel.py
      - ./confluence_scorer.py:/app/confluence_scorer.py
      - ./risk_enforcer.py:/app/risk_enforcer.py
      - ./pulse_config.yaml:/app/pulse_config.yaml
      - ./data/journal:/app/data/journal
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      django:
        condition: service_healthy
    networks:
      - default
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/pulse/health"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 30s

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: dashboard
    working_dir: /app/dashboard
    volumes:
      - ./dashboard:/app/dashboard
      - ./components:/app/components
      - ./utils:/app/utils
      - ./api_integration:/app/api_integration
      - ./dashboard/.streamlit:/app/dashboard/.streamlit
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app:/app/components:/app/utils:/app/api_integration
      - PULSE_API_URL=http://django:8000
      - MT5_API_URL=http://mt5:5001
    depends_on:
      django:
        condition: service_healthy
      pulse-kernel:
        condition: service_healthy
    command: >
      streamlit run pages/pulse_dashboard.py \
      --server.port=${STREAMLIT_SERVER_PORT:-8501} \
      --server.enableCORS true \
      --server.enableXsrfProtection false
    restart: unless-stopped
    networks:
      - default
      - traefik-public
    labels:
      <<: *default-labels
      traefik.enable: true
      traefik.docker.network: traefik-public
      traefik.http.routers.dashboard-http.rule: Host(`${DASHBOARD_DOMAIN:-dash.localhost}`)
      traefik.http.routers.dashboard-http.entrypoints: http
      traefik.http.routers.dashboard-http.middlewares: https-redirect
      traefik.http.routers.dashboard-https.rule: Host(`${DASHBOARD_DOMAIN:-dash.localhost}`)
      traefik.http.routers.dashboard-https.entrypoints: https
      traefik.http.routers.dashboard-https.tls: true
      traefik.http.routers.dashboard-https.tls.certresolver: le
      traefik.http.routers.dashboard-https.service: dashboard-service
      traefik.http.services.dashboard-service.loadbalancer.server.port: 8501
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8501/_stcore/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    logging: *default-logging

  celery:
    build:
      context: .
      dockerfile: backend/django/Dockerfile
    container_name: celery
    working_dir: /app/backend/django
    entrypoint: ["sh", "-c", "celery -A ${CELERY_APP:-app} worker --loglevel=info --concurrency=${CELERY_CONCURRENCY:-3}"]
    volumes:
      - static_volume:/app/staticfiles
      - ./data/cold:/app/data/cold
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app:/app/components:/app/utils:/app/backend
      - DJANGO_SETTINGS_MODULE=app.settings
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - CELERY_APP=app
    depends_on:
      django:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

  celery-beat:
    build:
      context: .
      dockerfile: backend/django/Dockerfile
    container_name: celery-beat
    working_dir: /app/backend/django
    entrypoint: ["sh", "-c", "celery -A ${CELERY_APP:-app} beat --loglevel=info"]
    volumes:
      - static_volume:/app/staticfiles
      - ./data/cold:/app/data/cold
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app:/app/components:/app/utils:/app/backend
      - DJANGO_SETTINGS_MODULE=app.settings
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - CELERY_APP=app
    depends_on:
      celery:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - default
    labels:
      <<: *default-labels
    logging: *default-logging

volumes:
  traefik-public-certificates:
  postgres-data:
  redis-data:
  static_volume:

networks:
  default:
    driver: bridge
  traefik-public:
    external: true
    name: traefik-public
