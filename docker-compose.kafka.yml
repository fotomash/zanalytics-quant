services:
  kafka:
    image: redpandadata/redpanda:v23.3.10
    command:
      - redpanda start
      - --smp 1
      - --reserve-memory 0M
      - --overprovisioned
      - --node-id 0
      - --check=false
      - --kafka-addr PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092
      - --advertise-kafka-addr PLAINTEXT://kafka:9092,OUTSIDE://localhost:29092
    ports:
      - "9092:9092"
      - "29092:29092"
    volumes:
      - redpanda-data:/var/lib/redpanda/data

  redis-to-kafka-mirror:
    build:
      context: .
      dockerfile: ./services/Dockerfile.mirror
    environment:
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_BROKERS=kafka:9092
      - TICKS_PATTERN=ticks.*
    depends_on:
      - redis
      - kafka
    restart: unless-stopped

  kafka-tick-to-bar:
    build:
      context: .
      dockerfile: ./services/Dockerfile.bars
    environment:
      - KAFKA_BROKERS=kafka:9092
      - TICKS_TOPIC=ticks.BTCUSDT
      - BARS_TOPIC=bars.BTCUSDT.1m
      - KAFKA_GROUP=bars-1m-builder
    depends_on:
      - kafka
    restart: unless-stopped

  bars-reconcile:
    profiles: ["ops"]
    image: python:3.11-slim
    working_dir: /app
    volumes:
      - .:/app
    environment:
      - KAFKA_BROKERS=kafka:9092
      - BARS_TOPIC=${BARS_TOPIC:-bars.BTCUSDT.1m}
      - KAFKA_PARTITION=0
      - WINDOW_BARS=${WINDOW_BARS:-1440}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379/0}
      - REDIS_BARS_KEY=${REDIS_BARS_KEY:-bars:BTCUSDT:1m}
      - PIP_ROOT_USER_ACTION=ignore
    depends_on:
      - kafka
      - redis
    command: >
      sh -c "pip install --no-cache-dir redis confluent-kafka && python services/bars_reconcile.py"

volumes:
  redpanda-data:

# Usage:
#   docker compose -f docker-compose.yml -f docker-compose.kafka.yml up -d
