openapi: 3.0.1
info:
  title: Zanalytics Pulse â€“ Actions (Minimal)
  version: 0.2.0
  description: |
    Minimal, Actions-friendly API (<=30 operations).
    Read-heavy; write endpoints limited to journaling and whisper acks/acts.
servers:
  - url: https://django2.zanalytics.app
tags:
  - name: Market
  - name: Mirror
  - name: Risk
  - name: Positions
  - name: Whispers
  - name: Journal
paths:
  /api/v1/market/mini:
    get:
      tags: [Market]
      summary: Market header mini payload
      operationId: actionsGetMarketMini
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  vix:
                    type: object
                    properties:
                      series: { type: array, items: { type: number } }
                      value: { type: number }
                  dxy:
                    type: object
                    properties:
                      series: { type: array, items: { type: number } }
                      value: { type: number }
                  news:
                    type: object
                    properties:
                      label: { type: string }
                      countdown: { type: string, nullable: true }
                  regime: { type: string }

  /api/v1/market/regime:
    get:
      tags: [Market]
      summary: Market regime signal and features
      operationId: actionsGetMarketRegime
      responses: { '200': { description: OK } }

  /api/v1/mirror/state:
    get:
      tags: [Mirror]
      summary: Behavioral mirror state
      operationId: actionsGetMirrorState
      responses: { '200': { description: OK } }

  /api/v1/behavioral/patterns:
    get:
      tags: [Mirror]
      summary: Behavioral patterns (30d)
      operationId: actionsGetBehavioralPatterns
      responses: { '200': { description: OK } }

  /api/v1/account/info:
    get:
      tags: [Risk]
      summary: Normalized account info
      operationId: actionsGetAccountInfo
      responses: { '200': { description: OK } }

  /api/v1/account/risk:
    get:
      tags: [Risk]
      summary: Session risk envelope (targets + caps)
      operationId: actionsGetAccountRisk
      responses: { '200': { description: OK } }

  /api/v1/profit-horizon:
    get:
      tags: [Risk]
      summary: Profit Horizon (last N closed trades)
      operationId: actionsGetProfitHorizon
      parameters:
        - in: query
          name: limit
          schema: { type: integer, default: 20, minimum: 1, maximum: 100 }
      responses: { '200': { description: OK } }

  /api/v1/positions/open:
    get:
      tags: [Positions]
      summary: Open positions (normalized)
      operationId: actionsGetPositionsOpen
      responses: { '200': { description: OK } }

  /api/v1/positions/{ticket}/protect:
    get:
      tags: [Positions]
      summary: Suggested protection options
      operationId: actionsGetPositionProtectOptions
      parameters:
        - in: path
          name: ticket
          required: true
          schema: { type: integer }
      responses: { '200': { description: OK } }

  /api/pulse/whispers:
    get:
      tags: [Whispers]
      summary: Latest whispers list (JSON)
      operationId: actionsGetWhispers
      responses: { '200': { description: OK } }

  /api/pulse/whispers/log:
    get:
      tags: [Whispers]
      summary: Whisper timeline (human-readable)
      operationId: actionsGetWhispersLog
      responses: { '200': { description: OK } }

  /api/pulse/whisper/ack:
    post:
      tags: [Whispers]
      summary: Acknowledge a whisper
      operationId: actionsPostWhisperAck
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id: { type: string }
                reason: { type: string, nullable: true }
      responses: { '200': { description: OK } }

  /api/pulse/whisper/act:
    post:
      tags: [Whispers]
      summary: Act on a whisper (journal intent)
      operationId: actionsPostWhisperAct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id: { type: string }
                action: { type: string }
      responses: { '200': { description: OK } }

  /api/v1/journal/entry:
    post:
      tags: [Journal]
      summary: Structured journal entry (post-trade reflection)
      operationId: actionsPostJournalEntry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [trade_id]
              properties:
                trade_id: { type: integer }
                confidence: { type: integer, minimum: 0, maximum: 10 }
                reflection: { type: string }
                text: { type: string }
                tags: { type: array, items: { type: string } }
      responses: { '200': { description: OK } }

  /api/v1/session/set_focus:
    post:
      tags: [Journal]
      summary: Set daily psychological focus
      operationId: actionsPostSessionSetFocus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [focus]
              properties:
                focus: { type: string }
      responses: { '200': { description: OK } }

components:
  schemas: {}
security: []

